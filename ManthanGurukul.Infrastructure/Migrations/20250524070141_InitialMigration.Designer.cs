// <auto-generated />
using System;
using ManthanGurukul.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace ManthanGurukul.Infrastructure.Migrations
{
    [DbContext(typeof(ManthanGurukulDBContext))]
    [Migration("20250524070141_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ManthanGurukul.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<long>("CreatedAt")
                        .HasColumnType("bigint");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.Property<long>("MobileNo")
                        .HasColumnType("bigint");

                    b.Property<long>("ModifiedAt")
                        .HasColumnType("bigint");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("bytea");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("bytea");

                    b.HasKey("Id");

                    b.HasIndex("MobileNo", "Email")
                        .IsUnique();

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = new Guid("16e0b0e5-792f-4f11-beec-cfe9340fe4be"),
                            CreatedAt = 638836669011345171L,
                            CreatedBy = new Guid("16e0b0e5-792f-4f11-beec-cfe9340fe4be"),
                            Email = "nishant.kumar.mishra@gmail.com",
                            FirstName = "Nishant",
                            IsActive = true,
                            LastName = "Mishra",
                            MobileNo = 9945654327L,
                            ModifiedAt = 0L,
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            PasswordHash = new byte[] { 125, 224, 34, 193, 214, 148, 94, 129, 17, 191, 150, 112, 110, 54, 108, 193, 109, 62, 25, 152, 219, 44, 66, 215, 235, 254, 46, 99, 26, 105, 60, 154, 15, 212, 235, 74, 170, 208, 187, 194, 50, 239, 77, 228, 96, 101, 67, 137, 43, 84, 246, 179, 93, 83, 45, 0, 8, 50, 169, 201, 208, 68, 33, 123 },
                            PasswordSalt = new byte[] { 142, 25, 152, 55, 28, 166, 3, 170, 139, 2, 13, 0, 187, 0, 221, 188, 10, 13, 227, 143, 155, 225, 12, 85, 226, 26, 146, 155, 241, 9, 149, 137, 211, 249, 236, 158, 120, 52, 152, 219, 18, 123, 100, 89, 76, 7, 38, 37, 31, 151, 143, 135, 93, 2, 248, 40, 198, 51, 34, 99, 100, 98, 81, 103, 206, 103, 239, 106, 202, 86, 11, 42, 155, 185, 165, 108, 227, 114, 113, 109, 76, 142, 56, 247, 154, 5, 248, 6, 108, 220, 68, 17, 18, 215, 116, 148, 195, 118, 113, 163, 66, 211, 225, 186, 118, 193, 61, 27, 143, 183, 171, 64, 118, 208, 186, 186, 195, 73, 149, 179, 116, 63, 129, 106, 255, 22, 21, 172 }
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
