@inherits LayoutComponentBase
@inject HttpClient Http

<style>
    /* wwwroot/css/app.css */
    .chatbot-container {
        position: fixed;
        bottom: 24px;
        right: 24px;
        z-index: 1050;
        display: flex;
        flex-direction: column;
        align-items: flex-end;
    }

    .chatbot-toggle {
        width: 56px;
        height: 56px;
        font-size: 1.5rem;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .chatbot-window {
        width: 500px;
        height: 500px; /* Increased height */
        margin-bottom: 8px;
        animation: fadeInUp 0.3s;
        display: flex;
        flex-direction: column;
    }

    @@keyframes fadeInUp {
        from {
            transform: translateY(40px);
            opacity: 0;
        }

        to {
            transform: translateY(0);
            opacity: 1;
        }
    }

    .chatbot-messages {
        flex: 1 1 auto;
        overflow-y: auto;
        padding: 8px 0;
        display: flex;
        flex-direction: column;
        gap: 8px;
        padding: .5rem 1rem;
    }

    .chatbot-message-bot {
        align-self: flex-start;
        background: #f1f3f4;
        color: #222;
        border-radius: 16px 16px 16px 4px;
        padding: 8px 14px;
        max-width: 80%;
        box-shadow: 0 1px 2px rgba(0,0,0,0.04);
    }

    .chatbot-message-user {
        align-self: flex-end;
        background: #007bff;
        color: #fff;
        border-radius: 16px 16px 4px 16px;
        padding: 8px 14px;
        max-width: 80%;
        box-shadow: 0 1px 2px rgba(0,0,0,0.08);
    }

    .chatbot-message-sender {
        font-size: 0.8rem;
        font-weight: 600;
        margin-bottom: 2px;
        opacity: 0.7;
    }
</style>

<div class="page">
    <div class="sidebar">
        <NavMenu />
    </div>

    <main>
        <div class="top-row px-4">
            <a href="/signin">SignIn</a>
        </div>

        <article class="content px-4">
            @Body
        </article>
    </main>
</div>

<!-- Chatbot Floating Button and Popup -->
<div class="chatbot-container">
    <button class="btn btn-primary rounded-circle chatbot-toggle" hidden="@showChat" @onclick="ToggleChat">
        <i class="bi bi-chat-dots"></i>
    </button>
    @if (showChat)
    {
        <div class="card chatbot-window shadow">
            <div class="card-header d-flex justify-content-between align-items-center">
                <span>Manthan Gurukul.AI</span>
                <button class="btn-close" @onclick="ToggleChat"></button>
            </div>
            <div class="card-body chatbot-messages">
                @if (chatHistory.Count == 0)
                {
                    <div class="text-muted small">How can I help you?</div>
                }
                else
                {
                    @foreach (var msg in chatHistory)
                    {
                        if (msg.Sender == "Bot")
                        {
                            <div class="chatbot-message-bot">
                                <div class="chatbot-message-sender">Bot</div>
                                @msg.Message
                            </div>
                        }
                        else
                        {
                            <div class="chatbot-message-user">
                                <div class="chatbot-message-sender">You</div>
                                @msg.Message
                            </div>
                        }
                    }
                }
                @if (isLoading)
                {
                    <div class="chatbot-message-bot">
                        <div class="chatbot-message-sender">Bot</div>
                        Bot is typing...
                    </div>
                }
            </div>
            <div class="card-footer">
                <div class="input-group">
                    <input type="text" class="form-control" placeholder="Type a message..." @bind="userMessage" @bind:event="oninput" @onkeydown="HandleEnter" />
                    <button class="btn btn-primary" type="button" @onclick="SendMessage" disabled="@isLoading">Send</button>
                </div>
            </div>
        </div>
    }
</div>

@code {
    private bool showChat = false;
    private string userMessage = string.Empty;
    private bool isLoading = false;

    private List<ChatMessage> chatHistory = new();

    private void ToggleChat()
    {
        showChat = !showChat;
    }

    private async Task SendMessage()
    {
        if (string.IsNullOrWhiteSpace(userMessage)) return;

        chatHistory.Add(new ChatMessage { Sender = "You", Message = userMessage });
        var messageToSend = userMessage;
        userMessage = string.Empty;
        isLoading = true;

        try
        {
            var response = await Http.PostAsJsonAsync("https://localhost:7068/api/ChatBot/Ask", new { question = messageToSend });
            if (response.IsSuccessStatusCode)
            {
                var botReply = await response.Content.ReadAsStringAsync();
                chatHistory.Add(new ChatMessage { Sender = "Bot", Message = botReply });
            }
            else
            {
                chatHistory.Add(new ChatMessage { Sender = "Bot", Message = "Sorry, something went wrong." });
            }
        }
        catch (Exception ex)
        {
            chatHistory.Add(new ChatMessage { Sender = "Bot", Message = ex.Message });
        }
        isLoading = false;
        StateHasChanged();
    }

    private async Task HandleEnter(KeyboardEventArgs e)
    {
        if (e.Key == "Enter")
        {
            await SendMessage();
        }
    }

    public class ChatMessage
    {
        public string Sender { get; set; } = "";
        public string Message { get; set; } = "";
    }
}